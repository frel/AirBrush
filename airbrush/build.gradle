apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'AirBrush'

    publishedGroupId = 'com.subgarden.android'
    libraryName = 'AirBrush'
    artifact = 'airbrush'

    libraryDescription = 'AirBrush is an Android library for simplifying the creation/handling of placeholder images that are shown while images are loading.'

    siteUrl = 'https://github.com/frel/AirBrush'
    gitUrl = 'https://github.com/frel/AirBrush.git'

    libraryVersion = '0.6.1'

    developerId = 'frel'
    developerName = 'Fredrik H. Larsen'
    developerEmail = 'fredrik@subgarden.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        versionName libraryVersion
        versionCode 61

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        renderscriptTargetApi versions.minSdk
        renderscriptSupportModeEnabled true
    }

    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            if (project.hasProperty("storeFile")) {
                storeFile file(properties.getProperty("storeFile"))
            }
            if (project.hasProperty("storePassword")) {
                storePassword properties.getProperty("storePassword")
            }
            if (project.hasProperty("keyAlias")) {
                keyAlias properties.getProperty("keyAlias")
            }
            if (project.hasProperty("keyPassword")) {
                keyPassword properties.getProperty("keyPassword")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig  signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    implementation "androidx.annotation:annotation:${versions.annotations}"
    implementation "androidx.palette:palette:${versions.palette}"
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    testImplementation 'junit:junit:4.12'
}

// Scripts for uploading to bintray
apply from: "installv1.gradle"
apply from: "bintrayv1.gradle"
